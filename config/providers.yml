- id: git_hub
  name: GitHub
  config_spec:
    properties:
      org:
        title: Your GitHub organisation
        description: "The organisation on GitHub to manage repos for. This should be the 'login' value as specified in https://developer.github.com/v3/orgs/."
        type: string
      app_id:
        title: Your GitHub App ID
        description: "The app ID for the [GitHub App](https://developer.github.com/apps/about-apps/) you have set up."
        type: string
      app_private_key:
        title: Your GitHub App private key
        description: "A private key for the [GitHub App](https://developer.github.com/apps/about-apps/) you have set up."
        type: string
        masked: true
      app_installation_id:
        title: Your GitHub App installation on your org
        description: "The specific installation of your GitHub App within your GitHub organisation."
        type: string
      enforce_best_practices:
        title: Enforce best practices
        description: "If enabled, all repositories created will have their master branches protected for all users (including admins) with: require pull request reviews before merging and require branches to be up to date before merging."
        type: boolean
    required:
      - org
      - app_id
      - app_private_key
      - app_installation_id

- id: ecr
  name: ECR
  config_spec:
    properties:
      account:
        title: AWS Account ID
        description: The AWS Account ID the ECR registry is running within
        type: string
      access_id:
        title: AWS Access ID
        description: The access id element of the credentials for provision ECR
        type: string
      access_token:
        title: AWS Access Secret
        description: The secret key element of the credentials used for speak to ECR api
        type: string
        masked: true
      region:
        title: AWS Region
        description: The AWS region the ECR registry exists within i.e. eu-west-2
        type: string
      global_robot_name:
        title: Global Robot Username
        description: The IAM ARN of the user being used as the robot entity i.e arn:aws:iam::ACCOUNT_NO:user/USERNAME
        type: string
      global_robot_token:
        title: Global Robot Token
        description: The IAM ARN of the user being used as the robot entity i.e arn:aws:iam::ACCOUNT_NO:user/USERNAME
        type: string
        masked: true
      org:
        title: Your organisation
        description: The organisation to manage repos for. This will be used as the namespace for all Docker repos created.
        type: string
    required:
      - access_id
      - access_token
      - account
      - global_robot_name
      - global_robot_token
      - org
      - region

- id: quay
  name: Quay
  config_spec:
    properties:
      org:
        title: Your Quay organisation
        description: The organisation on Quay to manage repos for. This will be used as the namespace for all Docker repos created.
        type: string
      api_access_token:
        title: Quay API access token
        description: An API token to be used to communicate with the Quay.io API. This must have enough permissions to create and manage repos. This is not shown to regular users of the hub.
        type: string
        masked: true
      global_robot_name:
        title: Global robot name
        description: "MUST be in the format: <org>+<robot_name>. This global robot token will be given access to all repos created within the org on Quay. It will be shown to users so they can access repositories."
      global_robot_token:
        title: Global robot token
        description: The value of the token for the global robot.
        masked: true
    required:
      - org
      - api_access_token
      - global_robot_name
      - global_robot_token

- id: kubernetes
  name: Kubernetes
  config_spec:
    properties:
      cluster_name:
        title: Cluster Name
        description: A name for this cluster
        type: string
      api_url:
        title: API URL
        description: The Kubernetes API URL. This can be found using `kubectl cluster-info`.
        type: string
      ca_cert:
        title: CA Certificate
        description: MUST be base64 encoded. This is the CA bundle (pem format) used by the Kubernetes API server.
        type: string
        masked: true
      token:
        title: Service account token
        description: A service account token used by the hub to interact with the Kubernetes API. The service account must have `cluster-admin` level permissions in order to manage namespaces, deployments and service accounts among other things. This is not shown to regular users of the hub.
        type: string
        masked: true
      global_service_account_name:
        title: Global service account name
        description: "This global service account will be given access to all namespaces created within the Kube cluster. It will be shown to users so they can access these namespaces."
        type: string
      global_service_account_token:
        title: Global service account token
        description: The value of the token for the global service account.
        type: string
        masked: true
    required:
      - cluster_name
      - api_url
      - ca_cert
      - token
      - global_service_account_name
      - global_service_account_token
