version: 2

jobs:

  test:
    parallelism: 1

    environment:
      SECRET_KEY_BASE: test_secret_key_base
      SECRET_SALT: test_secret_salt

    docker:
      - image: circleci/ruby:2.5.5-node-browsers

      - image: circleci/postgres:10.6-alpine
        environment:
          POSTGRES_USER: ahub
          POSTGRES_PASSWORD: ahub_password

    working_directory: ~/appvia-hub

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle && yarn install

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Lint
      - run:
          name: lint
          command: bundle exec rubocop && yarn lint

      # Audit
      - run:
          name: audit
          command: yarn audit

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # Run Ruby tests
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            $TEST_FILES

      # Collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      # Build assets (in production mode)
      # - to test that the build process goes through okay
      - run: yarn install --frozen-lockfile --production && NODE_ENV=production bin/rails assets:precompile

  audit:
    parallelism: 1

    docker:
      - image: circleci/ruby:2.5.5-node-browsers

    working_directory: ~/appvia-hub

    steps:
      - checkout

      # Audit
      - run:
          name: audit
          command: yarn audit

  build_only:
    machine: true
    parallelism: 1
    steps:
      - checkout
      - run:
          name: Build Docker image
          command: docker build -t quay.io/appvia/appvia-hub:$CIRCLE_SHA1 .

  build_and_push_latest:
    machine: true
    parallelism: 1
    steps:
      - checkout
      - run:
          name: Build image and push to Quay with tag latest
          command: |
            docker login quay.io --username $QUAY_USERNAME --password $QUAY_PASSWORD
            docker build -t quay.io/appvia/appvia-hub:$CIRCLE_SHA1 .
            docker tag quay.io/appvia/appvia-hub:$CIRCLE_SHA1 quay.io/appvia/appvia-hub:latest
            docker push quay.io/appvia/appvia-hub:$CIRCLE_SHA1
            docker push quay.io/appvia/appvia-hub:latest

  build_and_push_tag:
    machine: true
    parallelism: 1
    steps:
      - checkout
      - run:
          name: Build image and push to Quay with Git tag
          command: |
            docker login quay.io --username $QUAY_USERNAME --password $QUAY_PASSWORD
            docker build -t quay.io/appvia/appvia-hub:$CIRCLE_TAG .
            docker push quay.io/appvia/appvia-hub:$CIRCLE_TAG

  make_docs:
    docker:
      - image: python:2.7-alpine
    steps:
      - checkout
      - run: apk add -U git openssh git-fast-import
      - run: pip install mkdocs mkdocs-material markdown-include
      - run: mkdocs build
      - add_ssh_keys:
          fingerprints:
            - "6d:08:97:74:96:77:60:1a:28:6e:0c:a8:e6:6d:6f:7e"
      - run:
         environment:
          GIT_SSH_COMMAND: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
         command: "mkdocs gh-deploy -m \"[ci skip] Deployed {sha} with MkDocs version: {version}\""


workflows:
  version: 2
  main:
    jobs:
      - test:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/

      - build_only:
          requires:
            - test
          filters:
            branches:
              ignore:
                - master
            tags:
              ignore: /.*/

      - audit:
          filters:
            branches:
              only:
                - master

      - build_and_push_latest:
          requires:
            - test
          filters:
            branches:
              only:
                - master
            tags:
              ignore: /.*/

      - make_docs:
          requires:
            - build_and_push_latest
          filters:
            branches:
              only:
                - master
            tags:
              ignore: /.*/

      - build_and_push_tag:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
